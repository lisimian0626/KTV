// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mime.proto

package com.bestarmedia.proto.node;

/**
 * Protobuf type {@code Text}
 */
public  final class Text extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Text)
    TextOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Text.newBuilder() to construct.
  private Text(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Text() {
    content_ = "";
    color_ = "";
    background_ = "";
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Text(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            String s = input.readStringRequireUtf8();

            content_ = s;
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            color_ = s;
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            background_ = s;
            break;
          }
          case 32: {

            leftX_ = input.readInt32();
            break;
          }
          case 40: {

            rightX_ = input.readInt32();
            break;
          }
          case 48: {

            y_ = input.readInt32();
            break;
          }
          case 56: {

            playTime_ = input.readInt32();
            break;
          }
          case 72: {

            playCount_ = input.readInt32();
            break;
          }
          case 80: {

            playInterval_ = input.readInt32();
            break;
          }
          case 88: {

            playDirection_ = input.readInt32();
            break;
          }
          case 96: {

            source_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return MimeProto.internal_static_Text_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return MimeProto.internal_static_Text_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Text.class, Builder.class);
  }

  public static final int CONTENT_FIELD_NUMBER = 1;
  private volatile Object content_;
  /**
   * <pre>
   * 文本内容
   * </pre>
   *
   * <code>string content = 1;</code>
   */
  public String getContent() {
    Object ref = content_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      content_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 文本内容
   * </pre>
   *
   * <code>string content = 1;</code>
   */
  public com.google.protobuf.ByteString
      getContentBytes() {
    Object ref = content_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      content_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COLOR_FIELD_NUMBER = 2;
  private volatile Object color_;
  /**
   * <pre>
   * 颜色值 #FFFFFFFF
   * </pre>
   *
   * <code>string color = 2;</code>
   */
  public String getColor() {
    Object ref = color_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      color_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 颜色值 #FFFFFFFF
   * </pre>
   *
   * <code>string color = 2;</code>
   */
  public com.google.protobuf.ByteString
      getColorBytes() {
    Object ref = color_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      color_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BACKGROUND_FIELD_NUMBER = 3;
  private volatile Object background_;
  /**
   * <pre>
   * 背景图 url 默认为空值
   * </pre>
   *
   * <code>string background = 3;</code>
   */
  public String getBackground() {
    Object ref = background_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      background_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 背景图 url 默认为空值
   * </pre>
   *
   * <code>string background = 3;</code>
   */
  public com.google.protobuf.ByteString
      getBackgroundBytes() {
    Object ref = background_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      background_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LEFT_X_FIELD_NUMBER = 4;
  private int leftX_;
  /**
   * <pre>
   * 屏幕左边的x坐标 默认0,
   * </pre>
   *
   * <code>int32 left_x = 4;</code>
   */
  public int getLeftX() {
    return leftX_;
  }

  public static final int RIGHT_X_FIELD_NUMBER = 5;
  private int rightX_;
  /**
   * <pre>
   * 屏幕右边的y坐标 默认720
   * </pre>
   *
   * <code>int32 right_x = 5;</code>
   */
  public int getRightX() {
    return rightX_;
  }

  public static final int Y_FIELD_NUMBER = 6;
  private int y_;
  /**
   * <pre>
   * 高度Y坐标 默认80（走马灯顶部）
   * </pre>
   *
   * <code>int32 y = 6;</code>
   */
  public int getY() {
    return y_;
  }

  public static final int PLAY_TIME_FIELD_NUMBER = 7;
  private int playTime_;
  /**
   * <pre>
   * 单条播放时长，默认30s
   * </pre>
   *
   * <code>int32 play_time = 7;</code>
   */
  public int getPlayTime() {
    return playTime_;
  }

  public static final int PLAY_COUNT_FIELD_NUMBER = 9;
  private int playCount_;
  /**
   * <pre>
   * 播放次数 默认 1次
   * </pre>
   *
   * <code>int32 play_count = 9;</code>
   */
  public int getPlayCount() {
    return playCount_;
  }

  public static final int PLAY_INTERVAL_FIELD_NUMBER = 10;
  private int playInterval_;
  /**
   * <pre>
   * 播放间隔时间 单位秒，默认15秒
   * </pre>
   *
   * <code>int32 play_interval = 10;</code>
   */
  public int getPlayInterval() {
    return playInterval_;
  }

  public static final int PLAY_DIRECTION_FIELD_NUMBER = 11;
  private int playDirection_;
  /**
   * <pre>
   * 播放方向 1 从右向左 2从左向右，默认1
   * </pre>
   *
   * <code>int32 play_direction = 11;</code>
   */
  public int getPlayDirection() {
    return playDirection_;
  }

  public static final int SOURCE_FIELD_NUMBER = 12;
  private int source_;
  /**
   * <pre>
   * 0 店家本地 1 政府监管
   * </pre>
   *
   * <code>int32 source = 12;</code>
   */
  public int getSource() {
    return source_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getContentBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, content_);
    }
    if (!getColorBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, color_);
    }
    if (!getBackgroundBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, background_);
    }
    if (leftX_ != 0) {
      output.writeInt32(4, leftX_);
    }
    if (rightX_ != 0) {
      output.writeInt32(5, rightX_);
    }
    if (y_ != 0) {
      output.writeInt32(6, y_);
    }
    if (playTime_ != 0) {
      output.writeInt32(7, playTime_);
    }
    if (playCount_ != 0) {
      output.writeInt32(9, playCount_);
    }
    if (playInterval_ != 0) {
      output.writeInt32(10, playInterval_);
    }
    if (playDirection_ != 0) {
      output.writeInt32(11, playDirection_);
    }
    if (source_ != 0) {
      output.writeInt32(12, source_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getContentBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, content_);
    }
    if (!getColorBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, color_);
    }
    if (!getBackgroundBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, background_);
    }
    if (leftX_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, leftX_);
    }
    if (rightX_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, rightX_);
    }
    if (y_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, y_);
    }
    if (playTime_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, playTime_);
    }
    if (playCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, playCount_);
    }
    if (playInterval_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, playInterval_);
    }
    if (playDirection_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, playDirection_);
    }
    if (source_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, source_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Text)) {
      return super.equals(obj);
    }
    Text other = (Text) obj;

    if (!getContent()
        .equals(other.getContent())) return false;
    if (!getColor()
        .equals(other.getColor())) return false;
    if (!getBackground()
        .equals(other.getBackground())) return false;
    if (getLeftX()
        != other.getLeftX()) return false;
    if (getRightX()
        != other.getRightX()) return false;
    if (getY()
        != other.getY()) return false;
    if (getPlayTime()
        != other.getPlayTime()) return false;
    if (getPlayCount()
        != other.getPlayCount()) return false;
    if (getPlayInterval()
        != other.getPlayInterval()) return false;
    if (getPlayDirection()
        != other.getPlayDirection()) return false;
    if (getSource()
        != other.getSource()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CONTENT_FIELD_NUMBER;
    hash = (53 * hash) + getContent().hashCode();
    hash = (37 * hash) + COLOR_FIELD_NUMBER;
    hash = (53 * hash) + getColor().hashCode();
    hash = (37 * hash) + BACKGROUND_FIELD_NUMBER;
    hash = (53 * hash) + getBackground().hashCode();
    hash = (37 * hash) + LEFT_X_FIELD_NUMBER;
    hash = (53 * hash) + getLeftX();
    hash = (37 * hash) + RIGHT_X_FIELD_NUMBER;
    hash = (53 * hash) + getRightX();
    hash = (37 * hash) + Y_FIELD_NUMBER;
    hash = (53 * hash) + getY();
    hash = (37 * hash) + PLAY_TIME_FIELD_NUMBER;
    hash = (53 * hash) + getPlayTime();
    hash = (37 * hash) + PLAY_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getPlayCount();
    hash = (37 * hash) + PLAY_INTERVAL_FIELD_NUMBER;
    hash = (53 * hash) + getPlayInterval();
    hash = (37 * hash) + PLAY_DIRECTION_FIELD_NUMBER;
    hash = (53 * hash) + getPlayDirection();
    hash = (37 * hash) + SOURCE_FIELD_NUMBER;
    hash = (53 * hash) + getSource();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Text parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Text parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Text parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Text parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Text parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Text parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Text parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Text parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static Text parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static Text parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Text parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Text parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Text prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Text}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Text)
      TextOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MimeProto.internal_static_Text_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MimeProto.internal_static_Text_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Text.class, Builder.class);
    }

    // Construct using com.bestarmedia.proto.node.Text.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      content_ = "";

      color_ = "";

      background_ = "";

      leftX_ = 0;

      rightX_ = 0;

      y_ = 0;

      playTime_ = 0;

      playCount_ = 0;

      playInterval_ = 0;

      playDirection_ = 0;

      source_ = 0;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return MimeProto.internal_static_Text_descriptor;
    }

    @Override
    public Text getDefaultInstanceForType() {
      return Text.getDefaultInstance();
    }

    @Override
    public Text build() {
      Text result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public Text buildPartial() {
      Text result = new Text(this);
      result.content_ = content_;
      result.color_ = color_;
      result.background_ = background_;
      result.leftX_ = leftX_;
      result.rightX_ = rightX_;
      result.y_ = y_;
      result.playTime_ = playTime_;
      result.playCount_ = playCount_;
      result.playInterval_ = playInterval_;
      result.playDirection_ = playDirection_;
      result.source_ = source_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Text) {
        return mergeFrom((Text)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Text other) {
      if (other == Text.getDefaultInstance()) return this;
      if (!other.getContent().isEmpty()) {
        content_ = other.content_;
        onChanged();
      }
      if (!other.getColor().isEmpty()) {
        color_ = other.color_;
        onChanged();
      }
      if (!other.getBackground().isEmpty()) {
        background_ = other.background_;
        onChanged();
      }
      if (other.getLeftX() != 0) {
        setLeftX(other.getLeftX());
      }
      if (other.getRightX() != 0) {
        setRightX(other.getRightX());
      }
      if (other.getY() != 0) {
        setY(other.getY());
      }
      if (other.getPlayTime() != 0) {
        setPlayTime(other.getPlayTime());
      }
      if (other.getPlayCount() != 0) {
        setPlayCount(other.getPlayCount());
      }
      if (other.getPlayInterval() != 0) {
        setPlayInterval(other.getPlayInterval());
      }
      if (other.getPlayDirection() != 0) {
        setPlayDirection(other.getPlayDirection());
      }
      if (other.getSource() != 0) {
        setSource(other.getSource());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Text parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (Text) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private Object content_ = "";
    /**
     * <pre>
     * 文本内容
     * </pre>
     *
     * <code>string content = 1;</code>
     */
    public String getContent() {
      Object ref = content_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        content_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * 文本内容
     * </pre>
     *
     * <code>string content = 1;</code>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      Object ref = content_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 文本内容
     * </pre>
     *
     * <code>string content = 1;</code>
     */
    public Builder setContent(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      content_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 文本内容
     * </pre>
     *
     * <code>string content = 1;</code>
     */
    public Builder clearContent() {
      
      content_ = getDefaultInstance().getContent();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 文本内容
     * </pre>
     *
     * <code>string content = 1;</code>
     */
    public Builder setContentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      content_ = value;
      onChanged();
      return this;
    }

    private Object color_ = "";
    /**
     * <pre>
     * 颜色值 #FFFFFFFF
     * </pre>
     *
     * <code>string color = 2;</code>
     */
    public String getColor() {
      Object ref = color_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        color_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * 颜色值 #FFFFFFFF
     * </pre>
     *
     * <code>string color = 2;</code>
     */
    public com.google.protobuf.ByteString
        getColorBytes() {
      Object ref = color_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        color_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 颜色值 #FFFFFFFF
     * </pre>
     *
     * <code>string color = 2;</code>
     */
    public Builder setColor(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      color_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 颜色值 #FFFFFFFF
     * </pre>
     *
     * <code>string color = 2;</code>
     */
    public Builder clearColor() {
      
      color_ = getDefaultInstance().getColor();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 颜色值 #FFFFFFFF
     * </pre>
     *
     * <code>string color = 2;</code>
     */
    public Builder setColorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      color_ = value;
      onChanged();
      return this;
    }

    private Object background_ = "";
    /**
     * <pre>
     * 背景图 url 默认为空值
     * </pre>
     *
     * <code>string background = 3;</code>
     */
    public String getBackground() {
      Object ref = background_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        background_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * 背景图 url 默认为空值
     * </pre>
     *
     * <code>string background = 3;</code>
     */
    public com.google.protobuf.ByteString
        getBackgroundBytes() {
      Object ref = background_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        background_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 背景图 url 默认为空值
     * </pre>
     *
     * <code>string background = 3;</code>
     */
    public Builder setBackground(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      background_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 背景图 url 默认为空值
     * </pre>
     *
     * <code>string background = 3;</code>
     */
    public Builder clearBackground() {
      
      background_ = getDefaultInstance().getBackground();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 背景图 url 默认为空值
     * </pre>
     *
     * <code>string background = 3;</code>
     */
    public Builder setBackgroundBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      background_ = value;
      onChanged();
      return this;
    }

    private int leftX_ ;
    /**
     * <pre>
     * 屏幕左边的x坐标 默认0,
     * </pre>
     *
     * <code>int32 left_x = 4;</code>
     */
    public int getLeftX() {
      return leftX_;
    }
    /**
     * <pre>
     * 屏幕左边的x坐标 默认0,
     * </pre>
     *
     * <code>int32 left_x = 4;</code>
     */
    public Builder setLeftX(int value) {
      
      leftX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 屏幕左边的x坐标 默认0,
     * </pre>
     *
     * <code>int32 left_x = 4;</code>
     */
    public Builder clearLeftX() {
      
      leftX_ = 0;
      onChanged();
      return this;
    }

    private int rightX_ ;
    /**
     * <pre>
     * 屏幕右边的y坐标 默认720
     * </pre>
     *
     * <code>int32 right_x = 5;</code>
     */
    public int getRightX() {
      return rightX_;
    }
    /**
     * <pre>
     * 屏幕右边的y坐标 默认720
     * </pre>
     *
     * <code>int32 right_x = 5;</code>
     */
    public Builder setRightX(int value) {
      
      rightX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 屏幕右边的y坐标 默认720
     * </pre>
     *
     * <code>int32 right_x = 5;</code>
     */
    public Builder clearRightX() {
      
      rightX_ = 0;
      onChanged();
      return this;
    }

    private int y_ ;
    /**
     * <pre>
     * 高度Y坐标 默认80（走马灯顶部）
     * </pre>
     *
     * <code>int32 y = 6;</code>
     */
    public int getY() {
      return y_;
    }
    /**
     * <pre>
     * 高度Y坐标 默认80（走马灯顶部）
     * </pre>
     *
     * <code>int32 y = 6;</code>
     */
    public Builder setY(int value) {
      
      y_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 高度Y坐标 默认80（走马灯顶部）
     * </pre>
     *
     * <code>int32 y = 6;</code>
     */
    public Builder clearY() {
      
      y_ = 0;
      onChanged();
      return this;
    }

    private int playTime_ ;
    /**
     * <pre>
     * 单条播放时长，默认30s
     * </pre>
     *
     * <code>int32 play_time = 7;</code>
     */
    public int getPlayTime() {
      return playTime_;
    }
    /**
     * <pre>
     * 单条播放时长，默认30s
     * </pre>
     *
     * <code>int32 play_time = 7;</code>
     */
    public Builder setPlayTime(int value) {
      
      playTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 单条播放时长，默认30s
     * </pre>
     *
     * <code>int32 play_time = 7;</code>
     */
    public Builder clearPlayTime() {
      
      playTime_ = 0;
      onChanged();
      return this;
    }

    private int playCount_ ;
    /**
     * <pre>
     * 播放次数 默认 1次
     * </pre>
     *
     * <code>int32 play_count = 9;</code>
     */
    public int getPlayCount() {
      return playCount_;
    }
    /**
     * <pre>
     * 播放次数 默认 1次
     * </pre>
     *
     * <code>int32 play_count = 9;</code>
     */
    public Builder setPlayCount(int value) {
      
      playCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 播放次数 默认 1次
     * </pre>
     *
     * <code>int32 play_count = 9;</code>
     */
    public Builder clearPlayCount() {
      
      playCount_ = 0;
      onChanged();
      return this;
    }

    private int playInterval_ ;
    /**
     * <pre>
     * 播放间隔时间 单位秒，默认15秒
     * </pre>
     *
     * <code>int32 play_interval = 10;</code>
     */
    public int getPlayInterval() {
      return playInterval_;
    }
    /**
     * <pre>
     * 播放间隔时间 单位秒，默认15秒
     * </pre>
     *
     * <code>int32 play_interval = 10;</code>
     */
    public Builder setPlayInterval(int value) {
      
      playInterval_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 播放间隔时间 单位秒，默认15秒
     * </pre>
     *
     * <code>int32 play_interval = 10;</code>
     */
    public Builder clearPlayInterval() {
      
      playInterval_ = 0;
      onChanged();
      return this;
    }

    private int playDirection_ ;
    /**
     * <pre>
     * 播放方向 1 从右向左 2从左向右，默认1
     * </pre>
     *
     * <code>int32 play_direction = 11;</code>
     */
    public int getPlayDirection() {
      return playDirection_;
    }
    /**
     * <pre>
     * 播放方向 1 从右向左 2从左向右，默认1
     * </pre>
     *
     * <code>int32 play_direction = 11;</code>
     */
    public Builder setPlayDirection(int value) {
      
      playDirection_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 播放方向 1 从右向左 2从左向右，默认1
     * </pre>
     *
     * <code>int32 play_direction = 11;</code>
     */
    public Builder clearPlayDirection() {
      
      playDirection_ = 0;
      onChanged();
      return this;
    }

    private int source_ ;
    /**
     * <pre>
     * 0 店家本地 1 政府监管
     * </pre>
     *
     * <code>int32 source = 12;</code>
     */
    public int getSource() {
      return source_;
    }
    /**
     * <pre>
     * 0 店家本地 1 政府监管
     * </pre>
     *
     * <code>int32 source = 12;</code>
     */
    public Builder setSource(int value) {
      
      source_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 0 店家本地 1 政府监管
     * </pre>
     *
     * <code>int32 source = 12;</code>
     */
    public Builder clearSource() {
      
      source_ = 0;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Text)
  }

  // @@protoc_insertion_point(class_scope:Text)
  private static final Text DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Text();
  }

  public static Text getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Text>
      PARSER = new com.google.protobuf.AbstractParser<Text>() {
    @Override
    public Text parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Text(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Text> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Text> getParserForType() {
    return PARSER;
  }

  @Override
  public Text getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

